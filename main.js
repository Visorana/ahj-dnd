!function(){"use strict";new class{constructor(e){this.taskManager=e,this.columns=e.querySelectorAll(".task-list"),this.addButton=e.querySelectorAll(".add-button"),this.tasks=[["Welcome to Task Manager!","This is a card."],["Try dragging cards anywhere.","Finished with a card? Delete it."],["Make as many lists as you need!"]],this.form=null,this.draggedElem=null,this.ghostElem=null}init(){document.addEventListener("DOMContentLoaded",this.loadState.bind(this)),[...this.addButton].forEach((e=>e.addEventListener("click",this.openForm.bind(this)))),[...this.columns].forEach((e=>e.addEventListener("mousedown",this.onMouseDown.bind(this)))),document.documentElement.addEventListener("mouseup",this.onMouseUp.bind(this)),document.documentElement.addEventListener("mousemove",this.onMouseMove.bind(this))}loadState(){const e=localStorage.getItem("taskManagerState");e&&(this.tasks=JSON.parse(e)),this.render()}saveState(){localStorage.setItem("taskManagerState",JSON.stringify(this.tasks))}render(){this.columns.forEach((e=>e.innerHTML="")),this.tasks.forEach(((e,t)=>{e.forEach((e=>{this.columns[t].insertAdjacentHTML("beforeend",`\n          <li class="task-item">\n            <div class="task-wrap">\n              <p>${e}</p>\n              <button class="task-remove">×</button>\n            </div>\n          </li>\n        `)}))})),[...this.taskManager.querySelectorAll(".task-remove")].forEach((e=>e.addEventListener("click",this.removeTask.bind(this))))}openForm(e){e.preventDefault();const t=e.target,s=document.querySelector(".add-button.hidden");s&&(this.form.remove(),s.classList.remove("hidden")),this.form=document.createElement("form"),this.form.classList.add("task-form"),this.form.innerHTML='\n      <textarea class="form-textarea" placeholder="Enter a title for this card..." required"></textarea>\n      <div class="form-controls">\n      <input type="submit" class="form-submit" value="Add card"></input>\n        <button class="form-close">×</div>\n      </div>',t.classList.add("hidden"),t.after(this.form);const i=this.form.querySelector(".form-close");this.form.addEventListener("submit",this.createTask.bind(this)),i.addEventListener("click",this.closeForm.bind(this))}closeForm(e){e.preventDefault(),this.form.previousElementSibling.classList.remove("hidden"),this.form.remove()}createTask(e){e.preventDefault();const t=this.form.querySelector(".form-textarea"),s=t.value.trim();if(!s||/^\s+$/.test(s))t.setCustomValidity("Please enter a title."),t.reportValidity();else{const t=this.form.parentElement.querySelector(".task-list"),i=[...this.columns].findIndex((e=>e===t));this.tasks[i].push(s),this.saveState(),this.render(),this.closeForm(e)}t.addEventListener("input",(()=>t.setCustomValidity(""))),setTimeout((()=>{t.setCustomValidity("")}),3e3)}removeTask(e){e.preventDefault();const t=e.target,s=t.parentElement.querySelector("p").textContent.trim(),i=t.closest(".task-list"),n=[...this.columns].indexOf(i),o=this.tasks[n].indexOf(s);-1!==o&&(this.tasks[n].splice(o,1),this.saveState(),this.render())}onMouseDown(e){if(0!==e.button||e.target.classList.contains("task-remove"))return;const t=e.target.closest(".task-item");t&&(this.draggedElem=t,this.draggedElem.style.width=`${this.draggedElem.clientWidth}px`,this.saveMousePosition(e),this.ghostElem=this.createGhostElem(),this.draggedElem.insertAdjacentElement("beforebegin",this.ghostElem),this.draggedElem.classList.add("dragged"),document.body.classList.add("grab"),this.moveDraggedElem(e),this.moveGhostElem(e))}saveMousePosition(e){const t=this.draggedElem.getBoundingClientRect().top,s=this.draggedElem.getBoundingClientRect().left;this.x=e.clientX-s,this.y=e.clientY-t}createGhostElem(){const e=document.createElement("div");return e.style.width=`${this.draggedElem.clientWidth}px`,e.style.height=`${this.draggedElem.querySelector(".task-wrap").clientHeight}px`,e.classList.add("ghost-elem"),e}moveDraggedElem(e){this.draggedElem.style.left=e.pageX-this.x+"px",this.draggedElem.style.top=e.pageY-this.y+"px"}moveGhostElem(e){const t=document.elementFromPoint(e.clientX,e.clientY);if(!t)return;const s=t.closest(".task-item"),i=t.closest(".column-title"),n=t.closest(".column"),o=t.closest(".ghost-elem");if(s){const t=s.offsetHeight,i=s.getBoundingClientRect().top,n=e.clientY-i;s.insertAdjacentElement(n<t/2?"beforebegin":"afterend",this.ghostElem)}else i?i.nextElementSibling.insertAdjacentElement("afterbegin",this.ghostElem):n&&!o?n.querySelector(".task-list").appendChild(this.ghostElem):o||this.draggedElem.before(this.ghostElem)}onMouseMove(e){this.draggedElem&&(e.preventDefault(),this.moveDraggedElem(e),this.moveGhostElem(e))}onMouseUp(){if(this.draggedElem&&document.body.contains(this.ghostElem)){const e=[...this.columns].findIndex((e=>e.contains(this.draggedElem))),t=[...this.columns[e].querySelectorAll(".task-item")].indexOf(this.draggedElem),s=this.tasks[e].splice(t,1)[0],i=[...this.columns].findIndex((e=>e.contains(this.ghostElem))),n=Array.from(this.columns[i].children).indexOf(this.ghostElem);this.tasks[i].splice(n,0,s),this.ghostElem.replaceWith(this.draggedElem),this.ghostElem.remove(),this.draggedElem.classList.remove("dragged"),this.ghostElem=null,this.draggedElem=null,document.body.classList.remove("grab"),this.saveState(),this.render()}}}(document.querySelector(".task-manager")).init()}();